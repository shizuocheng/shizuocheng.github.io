{"meta":{"title":"漫步Dog","subtitle":"Shi zuocheng's personal blog","description":null,"author":"Shi Zuocheng","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"PHP实现将网页输入信息存入Mysql数据库","slug":"网页纳新网站的实现","date":"2019-09-28T14:26:45.000Z","updated":"2019-09-28T15:52:53.442Z","comments":true,"path":"2019/09/28/网页纳新网站的实现/","link":"","permalink":"http://yoursite.com/2019/09/28/网页纳新网站的实现/","excerpt":"HTML网页实现用户输入&emsp;&emsp;具体网页框架和美化元素这里不一一描述，直接写主题内容。 一、假设有一个报名网站，需要用户输入学号姓名和个人简介，具体body中的input代码如下： 123&lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt; // 输入姓名&lt;input type=&quot;text&quot; id=&quot;num&quot; /&gt; // 输入学号&lt;input type=&quot;text&quot; id=&quot;intro&quot; /&gt; // 输入个人简介 二、 在用户输入之后肯定会设置一个提交按钮，在input上放入onclick事件属性，具体实现如下： 1&lt;input type=&quot;submit&quot; id=&quot;sub&quot; onclick=&quot;sub();&quot; /&gt; //设置sub()点击事件","text":"HTML网页实现用户输入&emsp;&emsp;具体网页框架和美化元素这里不一一描述，直接写主题内容。 一、假设有一个报名网站，需要用户输入学号姓名和个人简介，具体body中的input代码如下： 123&lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt; // 输入姓名&lt;input type=&quot;text&quot; id=&quot;num&quot; /&gt; // 输入学号&lt;input type=&quot;text&quot; id=&quot;intro&quot; /&gt; // 输入个人简介 二、 在用户输入之后肯定会设置一个提交按钮，在input上放入onclick事件属性，具体实现如下： 1&lt;input type=&quot;submit&quot; id=&quot;sub&quot; onclick=&quot;sub();&quot; /&gt; //设置sub()点击事件 三、 定义sub()函数体 &emsp;（一）、 将输入的name、num、intro获取 123456var name = document.getElementById(&quot;name&quot;);var num = document.getElementById(&quot;num&quot;)var intro = document.getElementById(&quot;intro&quot;)// 这里有必要说一下，input中若使用的是id属性要用getElementById来获取输入信息；input若是用name属性获取则需要用document.getElementsByName来获取。// 一定要搞清楚，当时我就在这里踩了坑，此篇blog统一使用ById，以后会有专门的blog介绍ByName和ById的区别。 &emsp; （二）、 处理输入信息为空的情况 &emsp;&emsp;因为大背景是一个报名网站，所以输入的姓名学号不能为空，若为空要对用户进行提示让其重新输入。实现代码如下： 123456789// 代码很好理解，不作敖述if (name.value == &quot;&quot; || name.value == undefined) &#123; mui.alert(&quot;姓名没有填写&quot;, &quot;抱歉&quot;, &quot;返回重填&quot;) return;&#125;if (num.value == &quot;&quot; || num.value == undefined) &#123; mui.alert(&quot;学号没有填写&quot;, &quot;抱歉&quot;, &quot;返回重填&quot;) return;&#125; &emsp;（三）、 给baoming.php文件发送输入信息 &emsp;&emsp;此部分是html和php交互的核心部分 1234567891011 // 在http.post中第一个&#123;&#125;中写入baoming.php的url和发送的data信息，第二个是一个匿名函数 http.post(&#123; url: &quot;api/baoming.php&quot;, data: &quot;name=&quot; + name.value + &quot;&amp;num=&quot; + num.value + &quot;&amp;intro=&quot; + intro.value &#125;, function (err, result) &#123; //baoming.php中会对结果进行处理，通过返回的result的值提示用户具体信息。 if (result == &quot;0&quot;) &#123; alert(&quot;报名成功&quot;) &#125; else if (result == &quot;1&quot;) &#123; alert(&quot;已报名&quot;) &#125; else &#123; mui.alert(&quot;报名失败&quot;); &#125;&#125;) &emsp;（四）、 关于mui.js文件和tool.js文件 &emsp;&emsp;mui.js和tool.js是公共代码库文件，会用即可。 &emsp;&emsp;在body开头放入一段代码引入miu.js、完成mui.init函数，代码如下： 123&lt;script src=&quot;js/mui.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt; mui.init() &lt;/script&gt; &lt;script src=&quot;js/tool.js&quot;&gt;&lt;/script&gt; connect.php文件的实现&emsp;&emsp;connect.php主要完成对数据库的连接 一、首先定义一个mysql_conf数组存放服务器的地址，用户名和密码，代码如下： 123456$mysql_conf = array( &apos;host&apos; =&gt; &apos;127.0.0.1&apos;, // 127.0.0.1为本机IP位置 &apos;db&apos; =&gt; &apos;student&apos;, // 要连接到的本地数据库名 &apos;db_user&apos; =&gt; &apos;root&apos;, // 连接的用户名 &apos;db_pwd&apos; =&gt; &apos;123456&apos;, // 连接的密码 ); 二、建立数据库连接 1$mysqli = @new mysqli($mysql_conf[&apos;host&apos;], $mysql_conf[&apos;db_user&apos;], $mysql_conf[&apos;db_pwd&apos;]); 三、连接失败问题的判断处理 &emsp;&emsp;在说到连接问题之前，先介绍两个函数 &emsp;1. $mysqli-&gt;connect_errno()函数，这个是检查PHP是否连接上MYSQL，就是一个判断函数，具体用法如下： 123if ($mysqli-&gt;connect_errno) &#123; die(&quot;could not connect to the database:\\n&quot; . $mysqli-&gt;connect_error); // 诊断连接错误&#125; &emsp;2. $mysqli-&gt;select_db()函数，用于更改连接的默认数据库，语法为mysqli_select_db(connection,dbname); &emsp;这里遇到一个问题，函数mysqli_select_db有两个参数况且都是必须的，这里只用了一个dbname参数就完成了连接，问题先放放，明天解决。连接数据库代码如下： 123456 $mysqli-&gt;query(&quot;set names &apos;utf8&apos;;&quot;);//编码转化 $select_db = $mysqli-&gt;select_db($mysql_conf[&apos;db&apos;]); if (!$select_db) &#123; die(&quot;could not connect to the db:\\n&quot; . $mysqli-&gt;error); // 处理连接失败情况&#125; baoming.php文件的实现&emsp;&emsp;刚才在html文件中是通过http.post发送给了baoming.php报名信息的，这里要在baoming中进行处理信息并放入数据库一、首先引入connect.php，不连接数据库怎么搞都没有意义 1include(&apos;connect.php&apos;); 二、获取报名信息 123$name=$_POST[&apos;name&apos;];$num=$_POST[&apos;num&apos;];$intro=$_POST[&apos;intro&apos;]; 三、向数据库student的naxin表中insert报名信息 12345678910111213141516 // 首先判断name是否为空，从而判断信息有无，一般这里name都是可以获取到的，因为在html文件中已经设置了如果name为空返回重填 if($name)&#123; // 插入语句 $sql=&quot;insert into naxin values (&apos;$name&apos;,&apos;$num&apos;，&apos;$intro&apos;);&quot;; // 执行sql语句，查询sql信息是否存在 $res = $mysqli-&gt;query($sql); if($res)&#123; echo &apos;0&apos;; return; &#125;else&#123; echo &apos;erro&apos;; &#125;&#125;else&#123; echo &apos;erro&apos;;&#125; 综上所述，完成了将网页输入信息存放至本地数据库naxin表中。","categories":[],"tags":[]},{"title":"The difference between Oracle and MySQ","slug":"Oracle和Mysql的区别","date":"2019-09-27T12:26:45.000Z","updated":"2019-09-27T15:37:57.231Z","comments":true,"path":"2019/09/27/Oracle和Mysql的区别/","link":"","permalink":"http://yoursite.com/2019/09/27/Oracle和Mysql的区别/","excerpt":"","text":"2019/9/27——Oracle和MySQL区别1、mysql可以没有from，oracle必须有，可以写成from dual； 2、mysql使用concat()函数连接字符串，oracle不仅有concat()函数，还可以使用||； 3、mysql没有全外连接，使用集合连接代替，oracle有全外连接，而且左右外连接有自己的语法：(+)； 4、mysql分页使用limit，oracle分页得借助rownum关键字； 5、mysql自动增长auto_increment，oracle使用序列代替； 6、mysql直接书写循环判断语句，oracle得借助PLSQL语句； 7、mysql判断使用elseif，oracle使用elsif； 8、mysql可以直接增删改，oracle需要commit； 9、group by，在下oracle下用group by的话，group by后面的字段必须在select后面出现，不然会报错的，而mysql却不会；","categories":[],"tags":[]},{"title":"Database basics part 2","slug":"数据库基础2","date":"2019-09-26T12:26:45.000Z","updated":"2019-09-27T15:36:45.070Z","comments":true,"path":"2019/09/26/数据库基础2/","link":"","permalink":"http://yoursite.com/2019/09/26/数据库基础2/","excerpt":"2019/9/26——The Oracle base一、数据库常用数据类型&emsp;&emsp;上一篇blog简单介绍了Oracle数据库中表的建立，对表信息的增删改。这里归纳一下建表的过程中常用的四个数据类型： &emsp;①char(n)，char类型是长度为n的定长型字符串。由于是定长的字符串，故在插入信息的时候要插入固定为n长度的字符串，否则会导致数据插入不进去。 &emsp;②varchar2(n)，最大长度为n的变长字符串。由于在char中可能会导致浪费现象，varchar2相比于char类型最大的优势就是能节省储存空间。 &emsp;③number(n)，最常用的数字类型。 &emsp;④data，常用的日期类型，格式为YYYY-MM-DD。","text":"2019/9/26——The Oracle base一、数据库常用数据类型&emsp;&emsp;上一篇blog简单介绍了Oracle数据库中表的建立，对表信息的增删改。这里归纳一下建表的过程中常用的四个数据类型： &emsp;①char(n)，char类型是长度为n的定长型字符串。由于是定长的字符串，故在插入信息的时候要插入固定为n长度的字符串，否则会导致数据插入不进去。 &emsp;②varchar2(n)，最大长度为n的变长字符串。由于在char中可能会导致浪费现象，varchar2相比于char类型最大的优势就是能节省储存空间。 &emsp;③number(n)，最常用的数字类型。 &emsp;④data，常用的日期类型，格式为YYYY-MM-DD。 二、修改表的骨架信息&emsp;&emsp;上一篇blog中提到了update和delete的使用，update和delete往往是对表格中的内容进行修改删除。而当user有对表格骨架，例如有增加或删除某一条属性的需求时，就要用到alter命令，具体alter命令的实现如下： 增加一条属性 1alter table Student add S_entrance date; //增加学生入学时间的属性 删除一条属性 1alter table student drop column sid; //删除属性名为sid的属性 修改某一属性的字段名称 1alter table Student rename column sage to sage1; //将sage属性重命名为sage1 修改某一属性的数据类型 1alter table student modify sid varchar2(10); //将sid的数据类型改为varchar2(10) 三、删除表&emsp;&emsp;删除表的操作一定要小心使用，很可能会出现很多连带反应导致其他表或视图也受到影响 12 drop table &lt;表名&gt; [RESTRICT|CASCADE]; //若选择RESTRICT，要删除的表不能被其他标的约束所引用，不能有视图。如果存在依赖对象，则此表不可删除。若选择CASCADE，在删除表格的同时，相关的对象，例如视图会被一起删除。","categories":[],"tags":[]},{"title":"Database basics part 1","slug":"数据库基础1","date":"2019-09-24T12:26:45.000Z","updated":"2019-09-27T15:36:46.984Z","comments":true,"path":"2019/09/24/数据库基础1/","link":"","permalink":"http://yoursite.com/2019/09/24/数据库基础1/","excerpt":"2019/9/24——The Oracle base一、增加user、分配权限1.连接管理员账户 1connect system/&lt;管理员密码&gt;; 2.增加user语句 1create user &lt;用户名&gt; identified by &lt;密码&gt;; 3.赋给user权限 1grant connect,resource to &lt;用户名&gt;; 4.连接用户 1connect &lt;用户名&gt;/&lt;密码&gt;;","text":"2019/9/24——The Oracle base一、增加user、分配权限1.连接管理员账户 1connect system/&lt;管理员密码&gt;; 2.增加user语句 1create user &lt;用户名&gt; identified by &lt;密码&gt;; 3.赋给user权限 1grant connect,resource to &lt;用户名&gt;; 4.连接用户 1connect &lt;用户名&gt;/&lt;密码&gt;; 二、建表1.建立关系表(此处以学生表为例) 1234567create table Student( sid char(4) primary key, //学号设置为主键 sname varchar(10), sdept varchar(10), sage number(2)); 三、对表中数据进行增加、删除、更新1.增加数据 1234insert into Student values(&apos;1001&apos;,&apos;szc&apos;,&apos;SE&apos;,19);insert into Student values(&apos;1002&apos;,&apos;qgl&apos;,&apos;SE&apos;,20);insert into Student values(&apos;1003&apos;,&apos;xjl&apos;,&apos;SE&apos;,19);insert into Student values(&apos;1004&apos;,&apos;lxc&apos;,&apos;SE&apos;,21); 2.修改数据 12345678update &lt;表名&gt;set &lt;列名&gt;=&lt;表达式&gt;[where &lt;条件&gt;]; //此处where语句可用可不用，若不用即对整个表中的信息进行集中操作，同时where进行筛选时，可以是复杂的select嵌套语句//此处简单列举一例，将名为szc的年龄增加一岁。update Studentset sage+1where sname = &apos;szc&apos;; 3.删除数据 12345//此处删除数据是指删除一条信息(一个元组或多个元组的值)，要和删掉表格的行列等区分开，删掉表格的行列等是改变表的格式，要使用alter语句进行操作，后续会提到//此处简单列举一例，删除学号为1001的学生信息delete from Studentwhere sid = &apos;1001&apos;;","categories":[],"tags":[]},{"title":"Update my personal blog topics","slug":"Change my blog theme","date":"2019-09-23T12:26:45.000Z","updated":"2019-09-27T15:36:49.092Z","comments":true,"path":"2019/09/23/Change my blog theme/","link":"","permalink":"http://yoursite.com/2019/09/23/Change my blog theme/","excerpt":"","text":"2019/9/23——更新个人blog主题smackdown主题的切换&emsp;在免费的hexo主题网站上找到了一个基于yilia的hexo主题，个人比较喜欢也推荐大家感受下这个主题，git链接：https://github.com/smackgg/hexo-theme-smackdown.git。&emsp;具体实现切换主题的方法很简单，cmd窗口在当前blog根目录下cd themes文件，执行克隆命令hexo clone + https://github.com/smackgg/hexo-theme-smackdown.git; clone完毕后，返回blog根目录修改根目录下的_config.yml设置中的theme属性，原hexo框架安装后theme属性会自动设置为 landscape ，将theme属性修改为刚刚clone下来的文件名 smackgg 就可以啦。 具体的blog头像等个人设置的修改&emsp;将需要的图片等信息放入克隆下来的smackgg的source文件夹中，进入_config.yml修改即可，注意此时的_config.yml文件是clone下来文件中的_config.yml文件，而不是根目录下的_config.yml文件。例，我将author.jpg放入smackgg下的source中，在_config.yml的头像url中填入/img/author.jpg即可完成修改。","categories":[],"tags":[]},{"title":"My first blog post","slug":"我的第一篇博客文章","date":"2019-09-22T12:26:45.000Z","updated":"2019-09-27T15:35:31.215Z","comments":true,"path":"2019/09/22/我的第一篇博客文章/","link":"","permalink":"http://yoursite.com/2019/09/22/我的第一篇博客文章/","excerpt":"2019/9/22——Blog安装并部署个人blog&emsp;按照lxc发的视频(视频链接: https://www.bilibili.com/video/av44544186?t=1157)完成了个人blog的搭建。把blog部署到本地后，利用github将本地文件部署到http://shizuocheng.github.io。 新建博客文章一、cmd命令完成新建博客&emsp;①在cmd的blog根目录命令下，cd source/_posts&emsp;②执行hexo new “博客文件名”(生成的文件的后缀默认.md)&emsp;③进入新建的md文件中写博客内容，完毕后退回blog根目录下&emsp;④执行语句hexo g进行提交，执行hexo s进入local:4000下看是否已生成&emsp;⑤确认无误后在blog根目录下执行hexo d命令同步到远端","text":"2019/9/22——Blog安装并部署个人blog&emsp;按照lxc发的视频(视频链接: https://www.bilibili.com/video/av44544186?t=1157)完成了个人blog的搭建。把blog部署到本地后，利用github将本地文件部署到http://shizuocheng.github.io。 新建博客文章一、cmd命令完成新建博客&emsp;①在cmd的blog根目录命令下，cd source/_posts&emsp;②执行hexo new “博客文件名”(生成的文件的后缀默认.md)&emsp;③进入新建的md文件中写博客内容，完毕后退回blog根目录下&emsp;④执行语句hexo g进行提交，执行hexo s进入local:4000下看是否已生成&emsp;⑤确认无误后在blog根目录下执行hexo d命令同步到远端 二、直接在本地修改后上传&emsp;①在本地文件夹中进入blog下的source文件下的_posts文件，进入要修改的md文章文件&emsp;②在cmd命令窗口下，进入blog根目录分别执行hexo clean,hexo g,hexo s,hexo d完成远端部署 修改本地文章并同步到blog网页&emsp;首先进入要修改的md文件下进行修改，完毕后cmd命令中进入blog路径。首先执行hexo clean命令，其次执行hexo g命令完成提交，之后执行hexo s命令，执行hexo s命令后可进入localhost:4000，查看相关文章效果，从而进一步进行对md文档的部署完善。 &emsp;确认无误后，进入blog执行hexo d命令，稍等片刻即可同步到blog网页。&emsp;综上所述，在blog下，修改md文档—&gt;&gt;hexo clean—&gt;&gt;hexo g—&gt;&gt;hexo s—&gt;&gt;hexo d完成同步。","categories":[],"tags":[]}]}